services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - BASE_API_URL=${BASE_API_URL}
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - /app/tmp
    ports:
      - "8080"
    depends_on:
      - db
      - minio
    networks:
      - app-network
    environment:
      # Database Configuration
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      
      # MinIO Configuration  
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-minio:9000}
      
      # Authentication Configuration
      JWT_SECRET: ${JWT_SECRET}
      PASSWORD_PEPPER: ${PASSWORD_PEPPER}
      
      # Security Headers Configuration
      HSTS_MAX_AGE: ${HSTS_MAX_AGE:-31536000}
      CSP_MODE: ${CSP_MODE:-development}
      SECURITY_HEADERS_ENABLED: ${SECURITY_HEADERS_ENABLED:-true}
      
      # Admin User Configuration (optional)
      ADMIN_USER: ${ADMIN_USER:-}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-}
      
      # Input Validation Configuration
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}  # 10MB default
      MAX_REQUEST_BODY_SIZE: ${MAX_REQUEST_BODY_SIZE:-1048576}  # 1MB default
      MAX_FILENAME_LENGTH: ${MAX_FILENAME_LENGTH:-255}
      
      # CORS Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
      
      # Rate Limiting Configuration
      RATE_LIMIT_LOGIN_REQUESTS: ${RATE_LIMIT_LOGIN_REQUESTS:-5}
      RATE_LIMIT_LOGIN_PERIOD: ${RATE_LIMIT_LOGIN_PERIOD:-1m}
      RATE_LIMIT_REFRESH_REQUESTS: ${RATE_LIMIT_REFRESH_REQUESTS:-10}
      RATE_LIMIT_REFRESH_PERIOD: ${RATE_LIMIT_REFRESH_PERIOD:-1m}
      RATE_LIMIT_UPLOAD_REQUESTS: ${RATE_LIMIT_UPLOAD_REQUESTS:-3}
      RATE_LIMIT_UPLOAD_PERIOD: ${RATE_LIMIT_UPLOAD_PERIOD:-1m}
      RATE_LIMIT_API_REQUESTS: ${RATE_LIMIT_API_REQUESTS:-60}
      RATE_LIMIT_API_PERIOD: ${RATE_LIMIT_API_PERIOD:-1m}
      RATE_LIMIT_PUBLIC_REQUESTS: ${RATE_LIMIT_PUBLIC_REQUESTS:-100}
      RATE_LIMIT_PUBLIC_PERIOD: ${RATE_LIMIT_PUBLIC_PERIOD:-1m}
      RATE_LIMIT_ADMIN_REQUESTS: ${RATE_LIMIT_ADMIN_REQUESTS:-30}
      RATE_LIMIT_ADMIN_PERIOD: ${RATE_LIMIT_ADMIN_PERIOD:-1m}
      
      # Application Configuration
      GIN_MODE: ${GIN_MODE:-debug}
      API_DOMAIN: ${API_DOMAIN:-http://localhost}
      HTTPS_MODE: ${HTTPS_MODE:-false}

  db:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data: