basePath: /api
definitions:
  handlers.HelloResponse:
    properties:
      message:
        example: Hello from Go backend 2!
        type: string
    type: object
  models.AdminUser:
    properties:
      id:
        example: 1
        type: integer
      last_login:
        $ref: '#/definitions/models.NullTime'
      username:
        example: admin
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: Invalid credentials
        type: string
      message:
        example: Username or password is incorrect
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        example: password
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      expires_at:
        example: "2023-12-31T23:59:59Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/models.AdminUser'
    type: object
  models.NullTime:
    properties:
      time:
        type: string
      valid:
        type: boolean
    type: object
  models.SuccessResponse:
    properties:
      message:
        example: Operation completed successfully
        type: string
    type: object
host: localhost
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is a RESTful API for the portfolio web application
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: N/A
  title: Portfolio Web Application API
  version: "1.0"
paths:
  /{adminToken}/admin/assets/hero-banner:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new hero banner image (requires authentication)
      parameters:
      - description: Admin Token
        in: path
        name: adminToken
        required: true
        type: string
      - description: Hero banner image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: Request Entity Too Large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload hero banner image
      tags:
      - assets
  /{adminToken}/admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin user and return JWT token
      parameters:
      - description: Admin Token
        in: path
        name: adminToken
        required: true
        type: string
      - description: Login credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Admin login
      tags:
      - admin
  /{adminToken}/admin/logout:
    post:
      description: Invalidate current admin session
      parameters:
      - description: Admin Token
        in: path
        name: adminToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Admin logout
      tags:
      - admin
  /{adminToken}/admin/refresh:
    post:
      description: Refresh access token using refresh token
      parameters:
      - description: Admin Token
        in: path
        name: adminToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh access token
      tags:
      - admin
  /api/assets/hero-banner:
    get:
      description: Get the current hero banner image
      produces:
      - image/jpeg
      - image/png
      - image/gif
      - image/webp
      responses:
        "200":
          description: Hero banner image
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get hero banner image
      tags:
      - assets
  /api/assets/info:
    get:
      description: Get information about available assets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get asset information
      tags:
      - assets
  /test:
    get:
      consumes:
      - application/json
      description: Returns a greeting message from the Go backend with hot reload
        support
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HelloResponse'
      summary: Hello endpoint for testing
      tags:
      - hello
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
